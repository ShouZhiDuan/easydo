# 场景 1: 电商网站前端服务
apiVersion: v1
kind: Service
metadata:
  name: ecommerce-frontend
  annotations:
    # AWS ELB 特定注解
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
spec:
  type: LoadBalancer
  selector:
    app: ecommerce-frontend
  ports:
    - name: http
      port: 80
      targetPort: 8080
    - name: https
      port: 443
      targetPort: 8443

---
# 场景 2: 游戏服务器 (需要固定 IP)
apiVersion: v1
kind: Service
metadata:
  name: game-server
  annotations:
    # 保留静态 IP
    service.beta.kubernetes.io/aws-load-balancer-eip-allocations: "eipalloc-12345678"
spec:
  type: LoadBalancer
  selector:
    app: game-server
  ports:
    - name: game-port
      port: 7777
      targetPort: 7777
      protocol: UDP  # 游戏通常使用 UDP

---
# 场景 3: 数据库负载均衡器 (内部)
apiVersion: v1
kind: Service
metadata:
  name: database-lb
  annotations:
    # 内部负载均衡器，不对外暴露
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internal"
spec:
  type: LoadBalancer
  selector:
    app: mysql-cluster
  ports:
    - port: 3306
      targetPort: 3306 